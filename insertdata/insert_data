import 'package:flutter/material.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:demo/fire_database/fetch_data.dart';
import 'package:google_fonts/google_fonts.dart';

class InsertScreen extends StatefulWidget {
  const InsertScreen({super.key});

  @override
  State<InsertScreen> createState() => _InsertScreenState();
}

class _InsertScreenState extends State<InsertScreen> {
  void initState() {
    super.initState();
    readData();
  }

  bool isLoading = true;
  List<String> list = [];
  List<String> list1 = [];
  List<String> list2 = [];
  List<String> list3 = [];

  Future<void> readData() async {
    // Please replace the Database URL
    // which we will get in “Add Realtime Database”
    // step with DatabaseURL

    var url = "https://signin-36500-default-rtdb.firebaseio.com/" + "data.json";
    // Do not remove “data.json”,keep it as it is
    try {
      final response = await http.get(Uri.parse(url));

      final extractedData = json.decode(response.body) as Map<String, dynamic>;
      if (extractedData == null) {
        return;
      }
      extractedData.forEach((blogId, blogData) {
        list.add(blogData["medicinename"]);
        list1.add(blogData["dose"]);
        list2.add(blogData["route"]);
        list3.add(blogData["frequency"]);
      });

      setState(() {
        isLoading = true;
      });
    } catch (error) {
      throw error;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          'Medicine Chart',
          style: GoogleFonts.lato(
            fontSize: 22,
            fontWeight: FontWeight.w700,
            fontStyle: FontStyle.italic,
            color: Colors.white,
          ),
        ),
        centerTitle: true,
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: EdgeInsets.all(16.0),
            child: Row(
              children: [
                IconButton(
                  iconSize: 30,
                  icon: const Icon(Icons.add),
                  color: Colors.grey,
                  onPressed: () {
                    debugPrint('icon button selected');
                    _displayTextInputDialog(context);
                  },
                ),
                TextButton(
                  onPressed: () {
                    _displayTextInputDialog(context);
                  },
                  child: Text(
                    'Add Medicine',
                    style: GoogleFonts.lato(
                      fontSize: 22,
                      fontWeight: FontWeight.w700,
                      fontStyle: FontStyle.italic,
                      color: Colors.grey[700],
                    ),
                  ),
                ),
                IconButton(
                  iconSize: 30,
                  icon: const Icon(Icons.more_vert),
                  color: Colors.grey,
                  onPressed: () {
                    Navigator.push(context,
                        MaterialPageRoute(builder: (context) => FetchMethod()));
                  },
                ),
              ],
            ),
          ),
          Expanded(
            child: Container(
              width: MediaQuery.of(context).size.width,
              height: MediaQuery.of(context).size.height,
              padding: EdgeInsets.all(8.0),
              color: Colors.blue,
              child: Visibility(
                visible: isLoading,
                child: ListView.builder(
                  itemCount: list.length,
                  itemBuilder: (context, index) {
                    return Card(
                      child: Padding(
                        //padding: const EdgeInsets.only(top: 32, bottom: 32, left: 16, right: 16),
                        padding: const EdgeInsets.all(16.0),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: <Widget>[
                            Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: <Widget>[
                                InkWell(
                                  onTap: () {
                                    Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                            builder: (_) => FetchMethod()));
                                  },
                                  child: Text(
                                    list[index],
                                    //'Note Title',
                                    style: GoogleFonts.lato(
                                      fontSize: 20,
                                      fontWeight: FontWeight.w700,
                                      fontStyle: FontStyle.italic,
                                      color: Colors.grey[700],
                                    ),
                                  ),
                                ),
                                Text(
                                  list1[index],
                                  style: GoogleFonts.lato(
                                    fontSize: 15,
                                    fontWeight: FontWeight.bold,
                                    fontStyle: FontStyle.normal,
                                    color: Colors.grey[700],
                                  ),
                                ),
                                Text(
                                  list2[index],
                                  style: GoogleFonts.lato(
                                    fontSize: 15,
                                    fontWeight: FontWeight.bold,
                                    fontStyle: FontStyle.normal,
                                    color: Colors.grey[700],
                                  ),
                                ),
                                Text(
                                  list3[index],
                                  style: GoogleFonts.lato(
                                    fontSize: 15,
                                    fontWeight: FontWeight.bold,
                                    fontStyle: FontStyle.normal,
                                    color: Colors.grey[700],
                                  ),
                                ),
                              ],
                            ),
                            Container(
                              //color: Colors.red,
                              height: 40,
                              width: 40,
                              child: IconButton(
                                onPressed: () => Navigator.of(context).push(
                                    MaterialPageRoute(
                                        builder: (context) => FetchMethod())),
                                icon: Icon(Icons.more_vert),
                              ),
                            ),
                          ],
                        ),
                      ),
                    );
                  },
                ),
                replacement: const Center(
                  child: CircularProgressIndicator(),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

Future<void> _displayTextInputDialog(BuildContext context) async {
  final _formKey = GlobalKey<FormState>();
  final listOfDoses = ["10 mg", "20 mg", "30 mg"];
  String? dropdownValue = '10 mg';
  final medicinenameController = TextEditingController();
  final routeController = TextEditingController();
  final frequencyController = TextEditingController();
  return showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
            backgroundColor: Colors.green,
            key: _formKey,
            title: SingleChildScrollView(
                child: Column(children: <Widget>[
              Padding(
                padding: EdgeInsets.all(10.0),
                child: TextFormField(
                  controller: medicinenameController,
                  decoration: InputDecoration(
                    labelText: "Enter Medicine Name",
                    labelStyle: GoogleFonts.lato(
                      fontSize: 15,
                      fontWeight: FontWeight.bold,
                      fontStyle: FontStyle.normal,
                      color: Colors.white,
                    ),
                    enabledBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                  // The validator receives the text that the user has entered.
                  validator: (value) {
                    if (value!.isEmpty) {
                      return 'Enter Medicine Name';
                    }
                    return null;
                  },
                ),
              ),
              Padding(
                padding: EdgeInsets.all(10.0),
                child: DropdownButtonFormField(
                  value: dropdownValue,
                  icon: Icon(Icons.arrow_downward),
                  decoration: InputDecoration(
                    labelText: "Select dose Type",
                    labelStyle: GoogleFonts.lato(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                      fontStyle: FontStyle.normal,
                      color: Colors.white,
                    ),
                    enabledBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                  items: listOfDoses.map((String value) {
                    return new DropdownMenuItem<String>(
                      value: value,
                      child: new Text(value),
                    );
                  }).toList(),
                  onChanged: (String? newValue) {
                    debugPrint('selected value : $newValue');
                    dropdownValue = newValue;
                  },
                  validator: (dynamic value) {
                    if (value.isEmpty) {
                      return 'Please Select dose';
                    }
                    return null;
                  },
                ),
              ),
              Padding(
                padding: EdgeInsets.all(10.0),
                child: TextFormField(
                  keyboardType: TextInputType.name,
                  controller: routeController,
                  decoration: InputDecoration(
                    labelText: "Enter Route",
                    labelStyle: GoogleFonts.lato(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                      fontStyle: FontStyle.normal,
                      color: Colors.white,
                    ),
                    enabledBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                  // The validator receives the text that the user has entered.
                  validator: (value) {
                    if (value!.isEmpty) {
                      return 'Enter Route';
                    }
                    return null;
                  },
                ),
              ),
              Padding(
                padding: EdgeInsets.all(10.0),
                child: TextFormField(
                  controller: frequencyController,
                  decoration: InputDecoration(
                    labelText: "Enter Frequency",
                    labelStyle: GoogleFonts.lato(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                      fontStyle: FontStyle.italic,
                      color: Colors.white,
                    ),
                    enabledBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                  // The validator receives the text that the user has entered.
                  validator: (value) {
                    if (value!.isEmpty) {
                      return 'Enter Frequency';
                    }
                    return null;
                  },
                ),
              ),
              Padding(
                  padding: EdgeInsets.all(20.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: <Widget>[
                      ElevatedButton(
                        onPressed: () {
                          if ('${medicinenameController.text}' == '' ||
                              '${routeController.text}' == '' ||
                              '${frequencyController.text}' == '') {
                            print('medicine name is null');
                            showDialog(
                                context: context,
                                builder: (_) => AlertDialog(
                                      title: const Text("Sorry"),
                                      content: Text('please Enter All Fields.'),
                                      actions: <Widget>[
                                        TextButton(
                                          child: const Text("OK"),
                                          onPressed: () {
                                            Navigator.of(context).pop();
                                          },
                                        )
                                      ],
                                    ));
                            return;
                          }
                          print('${medicinenameController.text}');
                          debugPrint('${dropdownValue}');
                          debugPrint('${routeController.text}');
                          debugPrint('${frequencyController.text}');
                          var url =
                              "https://signin-36500-default-rtdb.firebaseio.com/" +
                                  "data.json";
                          // (Do not remove “data.json”,keep it as it is)
                          try {
                            final response = http.post(
                              Uri.parse(url),
                              body: json.encode({
                                "medicinename":
                                    '${medicinenameController.text}',
                                "dose": '${dropdownValue}',
                                "route": '${routeController.text}',
                                "frequency": '${frequencyController.text}'
                              }),
                            );
                            debugPrint('success');
                            Navigator.pop(context);
                            Navigator.of(context).pop();
                          } catch (error) {
                            throw error;
                          }
                        },
                        child: Text(
                          'Add',
                          style: GoogleFonts.lato(
                            fontSize: 22,
                            fontWeight: FontWeight.w700,
                            fontStyle: FontStyle.italic,
                            color: Colors.white,
                          ),
                        ),
                      ),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.of(context).pop();
                        },
                        child: Text(
                          'Cancel',
                          style: GoogleFonts.lato(
                            fontSize: 22,
                            fontWeight: FontWeight.w700,
                            fontStyle: FontStyle.italic,
                            color: Colors.white,
                          ),
                        ),
                      ),
                    ],
                  )),
            ])));
      });
}
